import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Progress } from "@/components/ui/progress";
import { Badge } from "@/components/ui/badge";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { 
  ArrowLeft, 
  Target, 
  Trophy,
  Calendar,
  CheckCircle,
  PlayCircle,
  Plus,
  Star,
  TrendingUp
} from "lucide-react";

interface AutomotivacaoModuleProps {
  onBack: () => void;
}

const AutomotivacaoModule = ({ onBack }: AutomotivacaoModuleProps) => {
  const [currentActivity, setCurrentActivity] = useState<string | null>(null);
  const [newGoal, setNewGoal] = useState('');
  const [goals, setGoals] = useState([
    { id: 1, text: 'Melhorar minhas notas em matem√°tica', completed: false, progress: 60 },
    { id: 2, text: 'Fazer novos amigos na escola', completed: true, progress: 100 },
    { id: 3, text: 'Aprender a tocar viol√£o', completed: false, progress: 30 }
  ]);

  const activities = [
    {
      id: 'goal_setting',
      title: 'Definindo Metas Pessoais',
      description: 'Aprenda a criar metas realistas e motivadoras',
      icon: <Target className="w-5 h-5" />,
      isCompleted: false,
      estimatedTime: 12
    },
    {
      id: 'resilience_stories',
      title: 'Hist√≥rias de Supera√ß√£o',
      description: 'Inspire-se com hist√≥rias reais de perseveran√ßa',
      icon: <Trophy className="w-5 h-5" />,
      isCompleted: true,
      estimatedTime: 10
    },
    {
      id: 'emotional_timeline',
      title: 'Linha do Tempo Emocional',
      description: 'Reflita sobre momentos de persist√™ncia em sua vida',
      icon: <Calendar className="w-5 h-5" />,
      isCompleted: false,
      estimatedTime: 15
    }
  ];

  const inspirationalStories = [
    {
      id: 1,
      title: 'Maria e o Sonho da Medicina',
      story: 'Maria sempre sonhou em ser m√©dica, mas vinha de uma fam√≠lia simples. Estudou muito, trabalhou para pagar os estudos e enfrentou v√°rias reprova√ß√µes em vestibulares. Hoje, ela √© pediatra e ajuda crian√ßas todos os dias.',
      lesson: 'A persist√™ncia e o trabalho duro podem transformar sonhos em realidade.',
      questions: [
        'O que voc√™ acha que motivou Maria a continuar tentando?',
        'Que obst√°culos voc√™ j√° superou em sua vida?',
        'Como voc√™ se sente quando enfrenta dificuldades?'
      ]
    },
    {
      id: 2,
      title: 'Jo√£o e a Supera√ß√£o da Timidez',
      story: 'Jo√£o era muito t√≠mido e tinha medo de falar em p√∫blico. Ele decidiu que queria mudar e come√ßou pequeno: falando mais na sala de aula, participando de grupos, praticando em casa. Hoje ele √© l√≠der estudantil.',
      lesson: 'Pequenos passos consistentes levam a grandes transforma√ß√µes.',
      questions: [
        'Como Jo√£o conseguiu vencer sua timidez?',
        'Que pequenos passos voc√™ poderia dar para alcan√ßar seus objetivos?',
        'O que significa persist√™ncia para voc√™?'
      ]
    }
  ];

  const renderGoalSetting = () => (
    <Card className="shadow-card">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Target className="w-6 h-6 text-green-500" />
          Definindo Metas Pessoais
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-6">
        <p className="text-muted-foreground">
          Metas bem definidas s√£o como um mapa que nos guia rumo ao sucesso. 
          Vamos criar metas que sejam espec√≠ficas, poss√≠veis de alcan√ßar e motivadoras para voc√™.
        </p>
        
        {/* Minhas Metas Atuais */}
        <div>
          <h4 className="font-semibold mb-3">üéØ Minhas Metas Atuais:</h4>
          <div className="space-y-3">
            {goals.map((goal) => (
              <Card key={goal.id} className="border-l-4 border-l-primary">
                <CardContent className="p-4">
                  <div className="flex items-center justify-between mb-2">
                    <span className={`text-sm ${goal.completed ? 'line-through text-muted-foreground' : ''}`}>
                      {goal.text}
                    </span>
                    {goal.completed ? (
                      <CheckCircle className="w-5 h-5 text-green-600" />
                    ) : (
                      <Badge variant="outline">{goal.progress}%</Badge>
                    )}
                  </div>
                  {!goal.completed && (
                    <Progress value={goal.progress} className="h-2" />
                  )}
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
        
        {/* Adicionar Nova Meta */}
        <div className="bg-blue-50 rounded-lg p-4">
          <h4 className="font-semibold text-blue-800 mb-3">‚ûï Adicionar Nova Meta:</h4>
          <div className="space-y-3">
            <Input
              placeholder="Ex: Aprender a tocar piano, Melhorar em educa√ß√£o f√≠sica..."
              value={newGoal}
              onChange={(e) => setNewGoal(e.target.value)}
            />
            <Button 
              onClick={() => {
                if (newGoal.trim()) {
                  setGoals([...goals, { 
                    id: goals.length + 1, 
                    text: newGoal, 
                    completed: false, 
                    progress: 0 
                  }]);
                  setNewGoal('');
                }
              }}
              className="w-full bg-blue-600 hover:bg-blue-700 text-white"
            >
              <Plus className="w-4 h-4 mr-2" />
              Adicionar Meta
            </Button>
          </div>
        </div>
        
        {/* Dicas para Metas Eficazes */}
        <div className="bg-yellow-50 rounded-lg p-4">
          <h4 className="font-semibold text-yellow-800 mb-2">üí° Dicas para Metas Eficazes:</h4>
          <ul className="text-sm text-yellow-700 space-y-1">
            <li>‚Ä¢ <strong>Espec√≠fica:</strong> "Melhorar em matem√°tica" ‚Üí "Tirar nota 8 na pr√≥xima prova de matem√°tica"</li>
            <li>‚Ä¢ <strong>Poss√≠vel:</strong> Escolha algo desafiador, mas que voc√™ consegue alcan√ßar</li>
            <li>‚Ä¢ <strong>Com prazo:</strong> "Este m√™s", "at√© as f√©rias", "no pr√≥ximo semestre"</li>
            <li>‚Ä¢ <strong>Dividida:</strong> Quebre metas grandes em pequenos passos</li>
          </ul>
        </div>
        
        <Button className="w-full bg-green-600 hover:bg-green-700 text-white">
          <CheckCircle className="w-4 h-4 mr-2" />
          Salvar Minhas Metas
        </Button>
      </CardContent>
    </Card>
  );

  const renderResilienceStories = () => (
    <Card className="shadow-card">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Trophy className="w-6 h-6 text-gold-500" />
          Hist√≥rias de Supera√ß√£o
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-6">
        <p className="text-muted-foreground">
          Essas hist√≥rias mostram como a persist√™ncia e a motiva√ß√£o podem nos ajudar a superar qualquer obst√°culo. 
          Que tal se inspirar e refletir sobre sua pr√≥pria jornada?
        </p>
        
        {inspirationalStories.map((story, index) => (
          <Card key={story.id} className="border-l-4 border-l-gold">
            <CardContent className="p-6">
              <h3 className="text-lg font-bold text-gold-700 mb-3">{story.title}</h3>
              
              <div className="bg-gold-50 rounded-lg p-4 mb-4">
                <p className="text-gold-800 text-sm leading-relaxed">{story.story}</p>
              </div>
              
              <div className="bg-green-50 rounded-lg p-3 mb-4">
                <h4 className="font-semibold text-green-800 mb-1">üåü Li√ß√£o Aprendida:</h4>
                <p className="text-sm text-green-700">{story.lesson}</p>
              </div>
              
              <div>
                <h4 className="font-semibold mb-3">üí≠ Reflex√µes:</h4>
                <div className="space-y-3">
                  {story.questions.map((question, qIndex) => (
                    <div key={qIndex}>
                      <p className="text-sm font-medium text-muted-foreground mb-2">{question}</p>
                      <Textarea 
                        placeholder="Escreva sua reflex√£o aqui..."
                        className="min-h-20 text-sm"
                      />
                    </div>
                  ))}
                </div>
              </div>
            </CardContent>
          </Card>
        ))}
        
        <Button className="w-full bg-green-600 hover:bg-green-700 text-white">
          <Star className="w-4 h-4 mr-2" />
          Salvar Minhas Reflex√µes
        </Button>
      </CardContent>
    </Card>
  );

  const renderEmotionalTimeline = () => (
    <Card className="shadow-card">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Calendar className="w-6 h-6 text-purple-500" />
          Minha Linha do Tempo de Supera√ß√£o
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-6">
        <p className="text-muted-foreground">
          Todos n√≥s j√° enfrentamos desafios e os superamos. Esta atividade te ajuda a lembrar 
          de momentos em que voc√™ foi persistente e alcan√ßou seus objetivos.
        </p>
        
        <div className="space-y-6">
          <div className="bg-purple-50 rounded-lg p-4">
            <h4 className="font-semibold text-purple-800 mb-3">üåü Quando eu era pequeno(a):</h4>
            <p className="text-sm text-purple-600 mb-2">
              Pense em algo que foi dif√≠cil no come√ßo, mas voc√™ n√£o desistiu (ex: aprender a andar de bicicleta, ler, nadar...)
            </p>
            <Textarea 
              placeholder="Conte sobre esse momento de supera√ß√£o..."
              className="bg-white"
            />
          </div>
          
          <div className="bg-blue-50 rounded-lg p-4">
            <h4 className="font-semibold text-blue-800 mb-3">üìö Na escola:</h4>
            <p className="text-sm text-blue-600 mb-2">
              Alguma mat√©ria que era dif√≠cil mas voc√™ melhorou? Um projeto desafiador que completou?
            </p>
            <Textarea 
              placeholder="Descreva esse desafio escolar que voc√™ superou..."
              className="bg-white"
            />
          </div>
          
          <div className="bg-green-50 rounded-lg p-4">
            <h4 className="font-semibold text-green-800 mb-3">üë• Com amigos/fam√≠lia:</h4>
            <p className="text-sm text-green-600 mb-2">
              Algum conflito que voc√™ resolveu? Uma situa√ß√£o social dif√≠cil que enfrentou?
            </p>
            <Textarea 
              placeholder="Compartilhe como superou esse desafio social..."
              className="bg-white"
            />
          </div>
          
          <div className="bg-gold-50 rounded-lg p-4">
            <h4 className="font-semibold text-gold-800 mb-3">üéØ Recentemente:</h4>
            <p className="text-sm text-gold-600 mb-2">
              Qual foi o √∫ltimo obst√°culo que voc√™ enfrentou e n√£o desistiu?
            </p>
            <Textarea 
              placeholder="Conte sobre sua supera√ß√£o mais recente..."
              className="bg-white"
            />
          </div>
        </div>
        
        <div className="bg-gradient-subtle rounded-lg p-4">
          <h4 className="font-semibold mb-2">üöÄ Reflex√£o Final:</h4>
          <p className="text-sm text-muted-foreground mb-3">
            Olhando para todas essas experi√™ncias, o que voc√™ percebe sobre sua capacidade de persistir e superar desafios?
          </p>
          <Textarea 
            placeholder="O que voc√™ aprendeu sobre sua pr√≥pria for√ßa e persist√™ncia?"
            className="min-h-24"
          />
        </div>
        
        <Button className="w-full bg-green-600 hover:bg-green-700 text-white">
          <TrendingUp className="w-4 h-4 mr-2" />
          Concluir Linha do Tempo
        </Button>
      </CardContent>
    </Card>
  );

  const completedCount = activities.filter(a => a.isCompleted).length;
  const progressPercentage = (completedCount / activities.length) * 100;

  if (currentActivity) {
    return (
      <div className="min-h-screen bg-gradient-subtle">
        <div className="max-w-4xl mx-auto p-6">
          <div className="flex items-center gap-4 mb-6">
            <Button variant="outline" onClick={() => setCurrentActivity(null)}>
              <ArrowLeft className="w-4 h-4 mr-2" />
              Voltar
            </Button>
            <div>
              <h1 className="text-2xl font-bold text-foreground">
                {activities.find(a => a.id === currentActivity)?.title}
              </h1>
            </div>
          </div>

          {currentActivity === 'goal_setting' && renderGoalSetting()}
          {currentActivity === 'resilience_stories' && renderResilienceStories()}
          {currentActivity === 'emotional_timeline' && renderEmotionalTimeline()}
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-subtle">
      <div className="max-w-6xl mx-auto p-6">
        {/* Header */}
        <div className="flex items-center gap-4 mb-6">
          <Button variant="outline" onClick={onBack}>
            <ArrowLeft className="w-4 h-4 mr-2" />
            Voltar
          </Button>
          <div className="flex-1">
            <h1 className="text-3xl font-bold text-foreground">Automotiva√ß√£o & Resili√™ncia</h1>
            <p className="text-muted-foreground">Fortale√ßa sua motiva√ß√£o e persist√™ncia</p>
          </div>
        </div>

        {/* Progresso */}
        <Card className="mb-8">
          <CardContent className="p-6">
            <div className="flex items-center justify-between mb-4">
              <h2 className="text-xl font-bold text-foreground">Seu Progresso</h2>
              <Badge variant="secondary">{completedCount}/{activities.length} conclu√≠das</Badge>
            </div>
            <Progress value={progressPercentage} className="h-3 mb-2" />
            <p className="text-sm text-muted-foreground">
              Continue desenvolvendo sua automotiva√ß√£o e resili√™ncia
            </p>
          </CardContent>
        </Card>

        {/* Conceito */}
        <Card className="mb-8 bg-gradient-to-br from-orange-50 to-red-50 border-orange-200">
          <CardHeader>
            <CardTitle className="flex items-center gap-2 text-orange-800">
              <Target className="w-6 h-6" />
              Automotiva√ß√£o & Resili√™ncia
            </CardTitle>
          </CardHeader>
          <CardContent>
            <p className="text-orange-700 mb-4">
              A automotiva√ß√£o √© a energia interna que nos move em dire√ß√£o aos nossos objetivos, 
              enquanto a resili√™ncia √© nossa capacidade de se recuperar e aprender com as dificuldades.
            </p>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="bg-white/80 rounded-lg p-4">
                <h4 className="font-semibold text-orange-800 mb-2">Automotiva√ß√£o inclui:</h4>
                <ul className="text-sm text-orange-700 space-y-1">
                  <li>‚Ä¢ Definir metas pessoais</li>
                  <li>‚Ä¢ Manter o foco nos objetivos</li>
                  <li>‚Ä¢ Celebrar pequenas conquistas</li>
                  <li>‚Ä¢ Encontrar prop√≥sito no que faz</li>
                </ul>
              </div>
              <div className="bg-white/80 rounded-lg p-4">
                <h4 className="font-semibold text-orange-800 mb-2">Resili√™ncia envolve:</h4>
                <ul className="text-sm text-orange-700 space-y-1">
                  <li>‚Ä¢ Ver erros como aprendizado</li>
                  <li>‚Ä¢ Adaptar-se a mudan√ßas</li>
                  <li>‚Ä¢ Manter esperan√ßa em dificuldades</li>
                  <li>‚Ä¢ Buscar apoio quando necess√°rio</li>
                </ul>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Atividades */}
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Trophy className="w-6 h-6 text-primary" />
              Atividades Pr√°ticas
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
              {activities.map((activity) => (
                <Card key={activity.id} className="cursor-pointer hover:shadow-lg transition-shadow">
                  <CardContent className="p-6">
                    <div className="flex items-start justify-between mb-3">
                      <div className="flex items-center gap-3">
                        {activity.icon}
                        {activity.isCompleted && (
                          <CheckCircle className="w-5 h-5 text-green-600" />
                        )}
                      </div>
                      <Badge variant={activity.isCompleted ? "secondary" : "outline"}>
                        {activity.estimatedTime} min
                      </Badge>
                    </div>
                    
                    <h3 className="font-semibold mb-2">{activity.title}</h3>
                    <p className="text-sm text-muted-foreground mb-4">{activity.description}</p>
                    
                    <Button 
                      variant={activity.isCompleted ? "outline" : "learning"}
                      className="w-full"
                      onClick={() => setCurrentActivity(activity.id)}
                    >
                      {activity.isCompleted ? (
                        <>
                          <CheckCircle className="w-4 h-4 mr-2" />
                          Revisar
                        </>
                      ) : (
                        <>
                          <PlayCircle className="w-4 h-4 mr-2" />
                          Come√ßar
                        </>
                      )}
                    </Button>
                  </CardContent>
                </Card>
              ))}
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default AutomotivacaoModule;