// Servi√ßo para integra√ß√£o com OpenAI - configura√ß√£o b√°sica
export class OpenAIService {
  private apiKey: string;
  
  constructor(apiKey?: string) {
    this.apiKey = apiKey || '';
  }

  async generateResponse(prompt: string, context: string = ''): Promise<string> {
    if (!this.apiKey) {
      return this.getFallbackResponse(prompt);
    }

    try {
      // Aqui seria a integra√ß√£o real com OpenAI
      // Por enquanto, retorna resposta simulada mais inteligente
      return this.getEnhancedFallbackResponse(prompt, context);
    } catch (error) {
      console.error('Erro na API OpenAI:', error);
      return this.getFallbackResponse(prompt);
    }
  }

  private getFallbackResponse(prompt: string): string {
    const responses = [
      "Interessante pergunta! Vou te ajudar a entender isso melhor usando o M√©todo CPA.",
      "Vamos resolver isso passo a passo! Primeiro, que tal visualizarmos o problema?",
      "√ìtima quest√£o para praticarmos! Posso te explicar de forma visual e pr√°tica.",
    ];
    return responses[Math.floor(Math.random() * responses.length)];
  }

  private getEnhancedFallbackResponse(prompt: string, context: string): string {
    // An√°lise mais sofisticada do prompt para respostas melhores
    if (prompt.includes('frac√£o') || prompt.includes('fra√ß√£o')) {
      return `Para fra√ß√µes, uso o m√©todo CPA: üß± Concreto: corte uma pizza em peda√ßos iguais. üé® Visual: desenhe c√≠rculos divididos. üî¢ Abstrato: trabalhe com numerador/denominador.`;
    }
    
    if (prompt.includes('√°rea') || prompt.includes('per√≠metro')) {
      return `Para geometria: üß± Concreto: me√ßa objetos reais com r√©gua. üé® Visual: desenhe e calcule. üî¢ Abstrato: use f√≥rmulas matem√°ticas.`;
    }

    return this.getFallbackResponse(prompt);
  }
}

export const openaiService = new OpenAIService();